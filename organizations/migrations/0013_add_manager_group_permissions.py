# Generated by Django 2.2.3 on 2022-03-12 09:57

from django.db import migrations

from organizations.models import Membership
from ..settings import FACILITY_MANAGER_GROUPNAME, ORGANIZATION_MANAGER_GROUPNAME

VIEW, ADD, CHANGE, DELETE = "view", "add", "change", "delete"
ALL = (VIEW, ADD, CHANGE, DELETE)

FACILITY_MANAGER_PERMISSIONS = (
    ("accounts", "useraccount", (VIEW,)),
    ("organizations", "facility", (CHANGE, VIEW)),
    ("organizations", "facilitymembership", ALL),
    ("organizations", "organization", (VIEW,)),
    ("organizations", "organizationmembership", (VIEW,)),
    ("organizations", "task", ALL),
    ("organizations", "workplace", ALL),
    ("scheduler", "shift", ALL),
    ("scheduler", "shifthelper", ALL),
    ("scheduletemplates", "scheduletemplate", ALL),
    ("scheduletemplates", "shifttemplate", ALL),
)

ORGANIZATION_MANAGER_PERMISSIONS = FACILITY_MANAGER_PERMISSIONS + (
    ("accounts", "useraccount", (VIEW,)),
    ("organizations", "facility", ALL),
    ("organizations", "facilitymembership", ALL),
    ("organizations", "organization", (CHANGE, VIEW)),
    ("organizations", "organizationmembership", ALL),
    ("organizations", "task", ALL),
    ("organizations", "workplace", ALL),
    ("scheduler", "shift", ALL),
    ("scheduler", "shifthelper", ALL),
    ("scheduletemplates", "scheduletemplate", ALL),
    ("scheduletemplates", "shifttemplate", ALL),
)

MANAGER_GROUPS = {
    FACILITY_MANAGER_GROUPNAME: FACILITY_MANAGER_PERMISSIONS,
    ORGANIZATION_MANAGER_GROUPNAME: ORGANIZATION_MANAGER_PERMISSIONS,
}


def forwards(apps, schema_editor):
    ContentTypeModel = apps.get_model("contenttypes", "ContentType")
    GroupModel = apps.get_model("auth", "Group")
    PermissionModel = apps.get_model("auth", "Permission")

    for group_name, permissions in MANAGER_GROUPS.items():
        group, created = GroupModel.objects.get_or_create(name=group_name)
        print(f"  - {group.name}: created group object")
        for app_label, model, actions in permissions:
            content_type, _ = ContentTypeModel.objects.get_or_create(app_label=app_label.lower(), model=model.lower())
            for action in actions:
                permission, _ = PermissionModel.objects.get_or_create(
                    content_type=content_type, codename=f"{action}_{model}".lower()
                )
                group.permissions.add(permission)
                print(f'    - {group.name}: added permission "{permission.name}" ({permission.codename})')

    OrganizationMembershipModel = apps.get_model("organizations", "OrganizationMembership")
    for organization_member in OrganizationMembershipModel.objects.filter(role__lt=Membership.Roles.MEMBER):
        user = organization_member.user_account.user
        group = GroupModel.objects.get(name=ORGANIZATION_MANAGER_GROUPNAME)
        user.groups.add(group)
        print(f'  - {group.name}: added user "{user.username}" (id: {user.id})')

    FacilityMembershipModel = apps.get_model("organizations", "FacilityMembership")
    for facility_member in FacilityMembershipModel.objects.filter(role__lt=Membership.Roles.MEMBER):
        user = facility_member.user_account.user
        group = GroupModel.objects.get(name=FACILITY_MANAGER_GROUPNAME)
        user.groups.add(group)
        print(f'  - {group.name}: added user "{user.username}" (id: {user.id})')


def backwards(apps, schema_editor):
    GroupModel = apps.get_model("auth", "Group")
    for group_name in MANAGER_GROUPS.keys():
        GroupModel.objects.get(name=group_name).delete()


class Migration(migrations.Migration):
    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        ("auth", "0011_update_proxy_permissions"),
        ("accounts", "0001_initial"),
        ("organizations", "0012_cascade_deletion"),
    ]

    operations = [
        migrations.RunPython(forwards, backwards),
    ]
